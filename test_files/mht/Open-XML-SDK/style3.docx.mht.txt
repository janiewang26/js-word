Build Windows Vista ApplicationsWith Visual Studio 2008, developers will be easily able to leverage new platform technologies and deliver more compelling applications to their customers. Visual Studio enables customers to effortlessly incorporate new Windows Presentation Foundation features into both existing Windows Forms applications and new applications.Developers can also move their applications to the new Windows Vista look and feel easily with enhancements to MFC and Visual C++®.Visual Studio offers developers key improvements such as:• Enable the construction of rich experience Windows applicationso Visual Studio provides tools that enable developers who are early adopters of Windows Presentation Foundation to build rich experience applications quickly and easily. These tools include a designer and XAML editor, project templates, debugging support, deployment support, etc.• Easily add the Windows Vista look and feel to native C++ applicationso Developers can use Visual Studio to build applications that exhibit the Windows Vista look and feel and take advantage of the more than 8,000 new native APIs available in Windows Vista. A number of the Windows Vista look and feel features are available simply by recompiling an MFC application. Deeper integration that requires more coding or design work on the part of the developer is also simplified with Visual Studio’s integrated support for the Windows Vista native APIs.• Office 2007 UI style support for native C++ applicationso Visual Studio 2008 also provides developers with support for building applications that make use of the Microsoft Office 2007 UI style, including the Ribbon Bar, Ribbon Status Bar and Mini-toolbar.• Improved interoperability between native and managed codeo Visual Studio makes it easier to build applications that leverage both native and managed code, and also delivers improved interoperability performance. C++ developers have access to a new marshalling library that simplifies data transfer across the native-managed boundary STL/CLR for extending the Standard Template Library (STL) into managed code.
Handle Data More ProductivelyVisual Studio 2008 significantly improves the way developers handle data. Traditionally, developers have manipulated data differently depending on where the data resides and how the user connects to it. With the introduction of Language Integrated Query (LINQ) and various other data access improvements, developers can now manage data using a consistent programmatic approach and perform data access with new data design surfaces. ADO.NET integrates with LINQ and supports an occasionally connected design pattern to simplify the development tasks for those application types.These new capabilities include:• Programming the model and design experience around language/data access unificationo LINQ aims to reduce complexity for developers and help boost their productivity through a set of extensions to the C# and Visual Basic programming languages as well as the Microsoft .NET Framework, which provide integrated querying for objects, databases, and XML data. Using LINQ, developers will be able to write queries natively in C# or Visual Basic, without having to use specialized languages, such as SQL and XPath.• Simplify the construction of data driven Web sites with LINQ to SQLo With deep support for incorporating .NET language integrated query (LINQ to SQL) into ASP.NET Web applications, Visual Studio makes the creation of data-driven Web sites more productive, more efficient and more fun. Developers can use familiar programming semantics to access all data sources in a unified and uniform manner. 
